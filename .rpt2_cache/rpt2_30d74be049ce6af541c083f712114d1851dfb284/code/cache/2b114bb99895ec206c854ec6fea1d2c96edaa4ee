{"code":"import { Status } from './types';\r\nexport var isLoadPristine = function (resource) { return resource.load.status === Status.Pristine; };\r\nexport var isPristine = isLoadPristine; // alias for isLoadPristine\r\nexport var isLoading = function (resource) { return resource.load.status === Status.Pending; };\r\nexport var hasLoadSuccess = function (resource) { return resource.load.status === Status.Success; };\r\nexport var hasLoadError = function (resource) { return resource.load.status === Status.Error; };\r\nexport var isCreatePristine = function (resource) { return resource.create.status === Status.Pristine; };\r\nexport var isCreating = function (resource) { return resource.create.status === Status.Pending; };\r\nexport var hasCreateSuccess = function (resource) { return resource.create.status === Status.Success; };\r\nexport var hasCreateError = function (resource) { return resource.create.status === Status.Error; };\r\nexport var isUpdatePristine = function (resource) { return resource.update.status === Status.Pristine; };\r\nexport var isUpdating = function (resource) { return resource.update.status === Status.Pending; };\r\nexport var hasUpdateSuccess = function (resource) { return resource.update.status === Status.Success; };\r\nexport var hasUpdateError = function (resource) { return resource.update.status === Status.Error; };\r\nexport var isRemovePristine = function (resource) { return resource.remove.status === Status.Pristine; };\r\nexport var isRemoving = function (resource) { return resource.remove.status === Status.Pending; };\r\nexport var hasRemoveSuccess = function (resource) { return resource.remove.status === Status.Success; };\r\nexport var hasRemoveError = function (resource) { return resource.remove.status === Status.Error; };\r\n","references":["/Users/isac/Projects/React/redux-resource/src/types.ts"],"dts":{"name":"/Users/isac/Projects/React/redux-resource/status.d.ts","writeByteOrderMark":false,"text":"import { Resource } from './types';\r\nexport declare const isLoadPristine: (resource: Resource<any>) => boolean;\r\nexport declare const isPristine: (resource: Resource<any>) => boolean;\r\nexport declare const isLoading: (resource: Resource<any>) => boolean;\r\nexport declare const hasLoadSuccess: (resource: Resource<any>) => boolean;\r\nexport declare const hasLoadError: (resource: Resource<any>) => boolean;\r\nexport declare const isCreatePristine: (resource: Resource<any>) => boolean;\r\nexport declare const isCreating: (resource: Resource<any>) => boolean;\r\nexport declare const hasCreateSuccess: (resource: Resource<any>) => boolean;\r\nexport declare const hasCreateError: (resource: Resource<any>) => boolean;\r\nexport declare const isUpdatePristine: (resource: Resource<any>) => boolean;\r\nexport declare const isUpdating: (resource: Resource<any>) => boolean;\r\nexport declare const hasUpdateSuccess: (resource: Resource<any>) => boolean;\r\nexport declare const hasUpdateError: (resource: Resource<any>) => boolean;\r\nexport declare const isRemovePristine: (resource: Resource<any>) => boolean;\r\nexport declare const isRemoving: (resource: Resource<any>) => boolean;\r\nexport declare const hasRemoveSuccess: (resource: Resource<any>) => boolean;\r\nexport declare const hasRemoveError: (resource: Resource<any>) => boolean;\r\n"}}
